name: Build App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    
env: 
 AZURE_WEBAPP_NAME: 'app-soat-bc22-man-dev-fr'


jobs:
  build:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./src

    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x

    - name: Cache NuGet packages
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        # Look to see if there is a cache hit for the corresponding requirements file
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget

    - name: Build
      run: dotnet build --configuration Release

    - name: Generate Database Initialisation Script
      run: |
        dotnet tool install --global dotnet-ef
        dotnet ef migrations script --configuration Release --no-build --idempotent --startup-project Soat.AntiGaspi.Api --output postgres/00_init.sql
    
    - name: Run Tests
      run: dotnet test -c Release --no-build --verbosity normal -l:trx;LogFileName=TestOutput.trx
    
    - name: Publish tests results
      uses: dorny/test-reporter@v1
      if: success() || failure()     
      with:
        name: Test report             
        path: './src/Soat.AntiGaspi.Api.Tests/TestResults/*.trx'
        reporter: dotnet-trx


  deploy: 
    runs-on: ubuntu-latest 
    needs: build 
    environment: 
      name: 'development' 
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }} 
    steps: 
    - uses: actions/checkout@v3 
    - name: Download build artifact 
    uses: actions/download-artifact@v3 
    with: 
      name: build-artifact 
      path: build 
    - name: Deploy to Azure WebApp 
    id: deploy-to-webapp 
    uses: azure/webapps-deploy@v2 
    with: 
      app-name: ${{ env.AZURE_WEBAPP_NAME }} 
      publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }} 
      package: './build' 